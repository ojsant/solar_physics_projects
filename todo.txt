RFS:

	- load multiple days, either use CDF write functionality to make one big CDF file or insert many many append calls in the code (prefer former)
		- doing it the the same way as in swaves.py (append data)

		Traceback (most recent call last):
		File "c:\Users\osant\Desktop\solar_physics_projects\soler\RFS.py", line 92, in <module>
			TimeLFR2D, FreqLFR2D = np.meshgrid(time_lfr_all, freq_lfr_mhz_all, indexing='ij')
								^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\numpy\lib\_function_base_impl.py", line 5250, in meshgrid
			output = [np.asanyarray(x).reshape(s0[:i] + (-1,) + s0[i + 1:])
					^^^^^^^^^^^^^^^^
		ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

	The reason this doesn't work is because the timespans of the files are different. 
	Having them be numpy arrays in the first place eliminates this, since np.append
	flattens arrays before appending. That only raises another problem: 

		Traceback (most recent call last):
		File "c:\Users\osant\Desktop\solar_physics_projects\soler\RFS.py", line 131, in <module>
			mesh_hfr = ax_hfr.pcolormesh(
					^^^^^^^^^^^^^^^^^^
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\matplotlib\__init__.py", line 1521, in inner
			return func(
				^^^^^
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\matplotlib\axes\_axes.py", line 6491, in pcolormesh
			X, Y, C, shading = self._pcolorargs('pcolormesh', *args,
							^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\matplotlib\axes\_axes.py", line 5990, in _pcolorargs
			X, Y = self._process_unit_info([("x", X), ("y", Y)], kwargs)
				^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\matplotlib\axes\_base.py", line 2617, in _process_unit_info
			axis.update_units(data)
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\matplotlib\axis.py", line 1756, in update_units
			converter = munits.registry.get_converter(data)
						^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		File "C:\Users\osant\miniforge3\envs\spacephys\Lib\site-packages\matplotlib\units.py", line 176, in get_converter
			return self.get_converter(np.array([0], dtype=x.dtype))
									^^^^^^^^^^^^^^^^^^^^^^^^^^^^
		ValueError: Converting an integer to a NumPy datetime requires a specified unit
		
	TODO: ------FIXED

Colormap: either have the gray vector in the custom_cmap function, or use cbar.cmap.set_under("gray") (so a separate cmap function is unnecessary). Latter won't have a gray bit in
the colorbar, but I guess it is just fine ----ok maybe not

Wind:
	- plot multiple days
	- separate loading and plotting
	- fillvals to nan (probably not needed, since greyed out either way)

	C:\Users\osant\sunpy\data